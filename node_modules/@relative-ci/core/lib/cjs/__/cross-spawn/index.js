'use strict';

var index = require('../../_virtual/index5.js');
var childProcess = require('node:child_process');
var parse = require('./lib/parse.js');
var enoent = require('./lib/enoent.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var childProcess__default = /*#__PURE__*/_interopDefault(childProcess);

var hasRequiredCrossSpawn;

function requireCrossSpawn () {
	if (hasRequiredCrossSpawn) return index.__module.exports;
	hasRequiredCrossSpawn = 1;

	const cp = childProcess__default.default;
	const parse$1 = parse.__require();
	const enoent$1 = enoent.__require();

	function spawn(command, args, options) {
	    // Parse the arguments
	    const parsed = parse$1(command, args, options);

	    // Spawn the child process
	    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);

	    // Hook into child process "exit" event to emit an error if the command
	    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
	    enoent$1.hookChildProcess(spawned, parsed);

	    return spawned;
	}

	function spawnSync(command, args, options) {
	    // Parse the arguments
	    const parsed = parse$1(command, args, options);

	    // Spawn the child process
	    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);

	    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
	    result.error = result.error || enoent$1.verifyENOENTSync(result.status, parsed);

	    return result;
	}

	index.__module.exports = spawn;
	index.__module.exports.spawn = spawn;
	index.__module.exports.sync = spawnSync;

	index.__module.exports._parse = parse$1;
	index.__module.exports._enoent = enoent$1;
	return index.__module.exports;
}

exports.__require = requireCrossSpawn;
//# sourceMappingURL=index.js.map
