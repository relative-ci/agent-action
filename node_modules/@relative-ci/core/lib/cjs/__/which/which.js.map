{"version":3,"file":"which.js","sources":["../../../../../../node_modules/which/which.js"],"sourcesContent":["const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n"],"names":["require$$0","require$$1"],"mappings":"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","x_google_ignoreList":[0]}