'use strict';

var process = require('node:process');
var path = require('node:path');
var node_url = require('node:url');
var index = require('./__/path-key/index.js');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var process__default = /*#__PURE__*/_interopDefault(process);
var path__default = /*#__PURE__*/_interopDefault(path);

const npmRunPath = ({
	cwd = process__default.default.cwd(),
	path: pathOption = process__default.default.env[index()],
	preferLocal = true,
	execPath = process__default.default.execPath,
	addExecPath = true,
} = {}) => {
	const cwdString = cwd instanceof URL ? node_url.fileURLToPath(cwd) : cwd;
	const cwdPath = path__default.default.resolve(cwdString);
	const result = [];

	if (preferLocal) {
		applyPreferLocal(result, cwdPath);
	}

	if (addExecPath) {
		applyExecPath(result, execPath, cwdPath);
	}

	return [...result, pathOption].join(path__default.default.delimiter);
};

const applyPreferLocal = (result, cwdPath) => {
	let previous;

	while (previous !== cwdPath) {
		result.push(path__default.default.join(cwdPath, 'node_modules/.bin'));
		previous = cwdPath;
		cwdPath = path__default.default.resolve(cwdPath, '..');
	}
};

// Ensure the running `node` binary is used
const applyExecPath = (result, execPath, cwdPath) => {
	const execPathString = execPath instanceof URL ? node_url.fileURLToPath(execPath) : execPath;
	result.push(path__default.default.resolve(cwdPath, execPathString, '..'));
};

const npmRunPathEnv = ({env = process__default.default.env, ...options} = {}) => {
	env = {...env};

	const pathName = index({env});
	options.path = env[pathName];
	env[pathName] = npmRunPath(options);

	return env;
};

exports.npmRunPath = npmRunPath;
exports.npmRunPathEnv = npmRunPathEnv;
//# sourceMappingURL=index.js.map
