{"version":3,"file":"git.js","sources":["../../../../../../../node_modules/env-ci/lib/git.js"],"sourcesContent":["import { execaSync } from \"execa\";\n\nexport function head(options) {\n  try {\n    return execaSync(\"git\", [\"rev-parse\", \"HEAD\"], options).stdout;\n  } catch {\n    return undefined;\n  }\n}\n\nexport function branch(options) {\n  try {\n    const headRef = execaSync(\n      \"git\",\n      [\"rev-parse\", \"--abbrev-ref\", \"HEAD\"],\n      options,\n    ).stdout;\n\n    if (headRef === \"HEAD\") {\n      const branch = execaSync(\n        \"git\",\n        [\"show\", \"-s\", \"--pretty=%d\", \"HEAD\"],\n        options,\n      )\n        .stdout.replace(/^\\(|\\)$/g, \"\")\n        .split(\", \")\n        .find((branch) => branch.startsWith(\"origin/\"));\n      return branch ? branch.match(/^origin\\/(?<branch>.+)/)[1] : undefined;\n    }\n\n    return headRef;\n  } catch {\n    return undefined;\n  }\n}\n\n// Match slug on SSH URLs (ex: `USER@HOST:PORT/ORG/REPO.git`)\nconst GIT_SSH_URL_SLUG_PATTERN = /^(?:.*)@(?:.*):(?:\\d+\\/)?(.*)\\.git$/;\n\n// Match slug on HTTP(S) URLs `https://github.com/semantic-release/env-ci.git`\nconst GIT_PATHNAME_SLUG_PATTERN = /^\\/(.*)\\.git$/;\n\n/**\n * Extract repository slug(owner/repo) from a repository URL\n *\n * @param {String} repositoryURL\n * @returns {String | undefined}\n */\nexport function getSlugFromGitURL(repositoryURL) {\n  if (!repositoryURL) {\n    return undefined;\n  }\n\n  if (repositoryURL.match(GIT_SSH_URL_SLUG_PATTERN)) {\n    return repositoryURL.replace(GIT_SSH_URL_SLUG_PATTERN, \"$1\");\n  }\n\n  try {\n    const url = new URL(repositoryURL);\n    return url.pathname.replace(GIT_PATHNAME_SLUG_PATTERN, \"$1\");\n  } catch {\n    return undefined;\n  }\n}\n"],"names":[],"mappings":";;AAEO,SAAS,IAAI,CAAC,OAAO,EAAE;AAC9B,EAAE,IAAI;AACN,IAAI,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,MAAM;AAClE,GAAG,CAAC,MAAM;AACV,IAAI,OAAO,SAAS;AACpB;AACA;;AAEO,SAAS,MAAM,CAAC,OAAO,EAAE;AAChC,EAAE,IAAI;AACN,IAAI,MAAM,OAAO,GAAG,SAAS;AAC7B,MAAM,KAAK;AACX,MAAM,CAAC,WAAW,EAAE,cAAc,EAAE,MAAM,CAAC;AAC3C,MAAM,OAAO;AACb,KAAK,CAAC,MAAM;;AAEZ,IAAI,IAAI,OAAO,KAAK,MAAM,EAAE;AAC5B,MAAM,MAAM,MAAM,GAAG,SAAS;AAC9B,QAAQ,KAAK;AACb,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,CAAC;AAC7C,QAAQ,OAAO;AACf;AACA,SAAS,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AACtC,SAAS,KAAK,CAAC,IAAI;AACnB,SAAS,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACvD,MAAM,OAAO,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS;AAC3E;;AAEA,IAAI,OAAO,OAAO;AAClB,GAAG,CAAC,MAAM;AACV,IAAI,OAAO,SAAS;AACpB;AACA;;AAEA;AACA,MAAM,wBAAwB,GAAG,qCAAqC;;AAEtE;AACA,MAAM,yBAAyB,GAAG,eAAe;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,aAAa,EAAE;AACjD,EAAE,IAAI,CAAC,aAAa,EAAE;AACtB,IAAI,OAAO,SAAS;AACpB;;AAEA,EAAE,IAAI,aAAa,CAAC,KAAK,CAAC,wBAAwB,CAAC,EAAE;AACrD,IAAI,OAAO,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,IAAI,CAAC;AAChE;;AAEA,EAAE,IAAI;AACN,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC;AACtC,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,EAAE,IAAI,CAAC;AAChE,GAAG,CAAC,MAAM;AACV,IAAI,OAAO,SAAS;AACpB;AACA;;;;","x_google_ignoreList":[0]}