import { AGENT_MISSING_KEY_ERROR, AGENT_MISSING_SLUG_ERROR, AGENT_MISSING_COMMIT_ERROR, AGENT_MISSING_BRANCH_ERROR } from '../locales/en.js';
import { DEFAULT_ENDPOINT } from '../constants.js';
import { debug } from '../utils/debug.js';
import { logger } from '../utils/logger.js';
import { maskObjectProperties } from '../utils/mask-object-property.js';
import { getGitCommitMessage } from './git/commit-message.js';
import { getAgentEnv } from './agent-env.js';
import { getCiEnv } from './ci-env.js';

/**
 * Load and normalize ingest params based on:
 * 1. plugin arguments
 * 2. agent env vars (RELATIVE_CI_*)
 * 3. env-ci fallback
 * 4. computed values
 */
async function loadEnv(args, config = {}, logger$1 = logger) {
    const { includeCommitMessage = true } = config;
    const ciEnv = await getCiEnv({ includeCommitMessage }, logger$1);
    debug('CI env', ciEnv);
    const agentEnv = getAgentEnv();
    debug('RELATIVE_CI env', maskObjectProperties(agentEnv, ['key']));
    const params = {
        isCi: ciEnv.isCi,
        agentVersion: "5.1.0-beta.5",
        agentType: args.agentType,
        key: agentEnv.key,
        endpoint: agentEnv.endpoint || DEFAULT_ENDPOINT,
        service: agentEnv.service || ciEnv.service,
        slug: args.slug || agentEnv.slug || ciEnv.slug,
        branch: args.branch || agentEnv.branch || ciEnv.branch,
        baseBranch: ciEnv.baseBranch,
        pr: args.pr || agentEnv.pr || ciEnv.pr,
        commit: args.commit || agentEnv.commit || ciEnv.commit,
        commitMessage: args.commitMessage || agentEnv.commitMessage || ciEnv.commitMessage,
        build: agentEnv.build || ciEnv.build,
        buildUrl: agentEnv.buildUrl || ciEnv.buildUrl,
    };
    /**
     * Get commit message using git if includeCommitMessage is set and
     * the commitMessage plugin argument is missing
     */
    if (!params.commitMessage && includeCommitMessage) {
        params.commitMessage = getGitCommitMessage();
    }
    debug('Env', maskObjectProperties(params, ['key']));
    // Validate required parameters
    if (!params.key) {
        throw new Error(AGENT_MISSING_KEY_ERROR);
    }
    if (!params.slug) {
        throw new Error(AGENT_MISSING_SLUG_ERROR);
    }
    if (!params.commit) {
        throw new Error(AGENT_MISSING_COMMIT_ERROR);
    }
    if (!params.branch) {
        throw new Error(AGENT_MISSING_BRANCH_ERROR);
    }
    // Explicitly pass required props to allow ts to infer correctly
    return {
        ...params,
        key: params.key,
        slug: params.slug,
        branch: params.branch,
        commit: params.commit,
    };
}

export { loadEnv };
//# sourceMappingURL=load.js.map
